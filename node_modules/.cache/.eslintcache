[{"/home/brandon/e-commercee/src/index.js":"1","/home/brandon/e-commercee/src/App.js":"2","/home/brandon/e-commercee/src/components/Products/Product/Product.jsx":"3","/home/brandon/e-commercee/src/components/Products/Product/styles.js":"4","/home/brandon/e-commercee/src/components/Products/Products.jsx":"5","/home/brandon/e-commercee/src/components/Navbar/Navbar.jsx":"6","/home/brandon/e-commercee/src/components/Navbar/styles.js":"7","/home/brandon/e-commercee/src/components/index.js":"8","/home/brandon/e-commercee/src/components/Products/styles.js":"9","/home/brandon/e-commercee/src/lib/commerce.js":"10","/home/brandon/e-commercee/src/components/Cart/Cart.jsx":"11","/home/brandon/e-commercee/src/components/Cart/styles.js":"12","/home/brandon/e-commercee/src/components/Cart/CartItem/CartItem.jsx":"13","/home/brandon/e-commercee/src/components/Cart/CartItem/styles.js":"14","/home/brandon/e-commercee/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/home/brandon/e-commercee/src/components/CheckoutForm/Checkout/styles.js":"16","/home/brandon/e-commercee/src/components/CheckoutForm/AddressForm.jsx":"17","/home/brandon/e-commercee/src/components/CheckoutForm/PaymentForm.jsx":"18","/home/brandon/e-commercee/src/components/CheckoutForm/CustomTextField.jsx":"19","/home/brandon/e-commercee/src/components/CheckoutForm/Review.jsx":"20"},{"size":233,"mtime":1659199271731,"results":"21","hashOfConfig":"22"},{"size":2365,"mtime":1659279464591,"results":"23","hashOfConfig":"22"},{"size":1227,"mtime":1658992439105,"results":"24","hashOfConfig":"22"},{"size":372,"mtime":1658992923452,"results":"25","hashOfConfig":"22"},{"size":1236,"mtime":1659279689697,"results":"26","hashOfConfig":"22"},{"size":2131,"mtime":1659278415954,"results":"27","hashOfConfig":"22"},{"size":1516,"mtime":1658998692535,"results":"28","hashOfConfig":"22"},{"size":230,"mtime":1659278724345,"results":"29","hashOfConfig":"22"},{"size":395,"mtime":1659278613309,"results":"30","hashOfConfig":"22"},{"size":125,"mtime":1658924453135,"results":"31","hashOfConfig":"22"},{"size":1759,"mtime":1659279011198,"results":"32","hashOfConfig":"22"},{"size":569,"mtime":1659279066873,"results":"33","hashOfConfig":"22"},{"size":1398,"mtime":1659279752583,"results":"34","hashOfConfig":"22"},{"size":332,"mtime":1659278943862,"results":"35","hashOfConfig":"22"},{"size":3116,"mtime":1659277895188,"results":"36","hashOfConfig":"22"},{"size":1157,"mtime":1659277950542,"results":"37","hashOfConfig":"22"},{"size":4596,"mtime":1659340176910,"results":"38","hashOfConfig":"22"},{"size":2403,"mtime":1659278116283,"results":"39","hashOfConfig":"22"},{"size":456,"mtime":1659341208267,"results":"40","hashOfConfig":"22"},{"size":891,"mtime":1659278152745,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"43ki4x",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/brandon/e-commercee/src/index.js",[],[],[],"/home/brandon/e-commercee/src/App.js",["106","107","108","109","110","111","112","113","114","115","116"],[],"import React, { useState, useEffect } from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport { Navbar, Products, Cart, Checkout } from './components';\nimport { commerce } from './lib/commerce';\n\nconst App = () => {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n  const [order, setOrder] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const fetchProducts = async () => {\n    const { data } = await commerce.products.list();\n\n    setProducts(data);\n  };\n\n  const fetchCart = async () => {\n    setCart(await commerce.cart.retrieve());\n  };\n\n  const handleAddToCart = async (productId, quantity) => {\n    const item = await commerce.cart.add(productId, quantity);\n\n    setCart(item.cart);\n  };\n\n  const handleUpdateCartQty = async (lineItemId, quantity) => {\n    const response = await commerce.cart.update(lineItemId, { quantity });\n\n    setCart(response.cart);\n  };\n\n  const handleRemoveFromCart = async (lineItemId) => {\n    const response = await commerce.cart.remove(lineItemId);\n\n    setCart(response.cart);\n  };\n\n  const handleEmptyCart = async () => {\n    const response = await commerce.cart.empty();\n\n    setCart(response.cart);\n  };\n\n  const refreshCart = async () => {\n    const newCart = await commerce.cart.refresh();\n\n    setCart(newCart);\n  };\n\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n    try {\n      const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder);\n\n      setOrder(incomingOrder);\n\n      refreshCart();\n    } catch (error) {\n      setErrorMessage(error.data.error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCart();\n  }, []);\n\n  const handleDrawerToggle = () => setMobileOpen(!mobileOpen);\n\n  return (\n    <Router>\n      <div style={{ display: 'flex' }}>\n        <CssBaseline />\n        <Navbar totalItems={cart.total_items} handleDrawerToggle={handleDrawerToggle} />\n        <Routes>\n          <Route exact path=\"/\">\n          </Route>\n          <Route exact path=\"/cart\">\n          </Route>\n          <Route path=\"/checkout\" exact>\n           \n          </Route>\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","/home/brandon/e-commercee/src/components/Products/Product/Product.jsx",[],[],"/home/brandon/e-commercee/src/components/Products/Product/styles.js",[],[],"/home/brandon/e-commercee/src/components/Products/Products.jsx",[],[],"/home/brandon/e-commercee/src/components/Navbar/Navbar.jsx",[],[],"/home/brandon/e-commercee/src/components/Navbar/styles.js",[],[],"/home/brandon/e-commercee/src/components/index.js",[],[],"/home/brandon/e-commercee/src/components/Products/styles.js",[],[],"/home/brandon/e-commercee/src/lib/commerce.js",[],[],"/home/brandon/e-commercee/src/components/Cart/Cart.jsx",[],[],"/home/brandon/e-commercee/src/components/Cart/styles.js",[],[],"/home/brandon/e-commercee/src/components/Cart/CartItem/CartItem.jsx",[],[],"/home/brandon/e-commercee/src/components/Cart/CartItem/styles.js",[],[],"/home/brandon/e-commercee/src/components/CheckoutForm/Checkout/Checkout.jsx",["117"],[],"import React, { useState, useEffect } from 'react';\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { commerce } from '../../../lib/commerce';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\nimport useStyles from './styles';\n\nconst steps = ['Shipping address', 'Payment details'];\n\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [activeStep, setActiveStep] = useState(0);\n  const [shippingData, setShippingData] = useState({});\n  const classes = useStyles();\n  const history = useHistory();\n\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n  useEffect(() => {\n    if (cart.id) {\n      const generateToken = async () => {\n        try {\n          const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\n\n          setCheckoutToken(token);\n        } catch {\n          if (activeStep !== steps.length) history.push('/');\n        }\n      };\n\n      generateToken();\n    }\n  }, [cart]);\n\n  const test = (data) => {\n    setShippingData(data);\n\n    nextStep();\n  };\n\n  let Confirmation = () => (order.customer ? (\n    <>\n      <div>\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\n        <Divider className={classes.divider} />\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n      </div>\n      <br />\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n    </>\n  ) : (\n    <div className={classes.spinner}>\n      <CircularProgress />\n    </div>\n  ));\n\n  if (error) {\n    Confirmation = () => (\n      <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n      </>\n    );\n  }\n\n  const Form = () => (activeStep === 0\n    ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test} />\n    : <PaymentForm checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} shippingData={shippingData} onCaptureCheckout={onCaptureCheckout} />);\n\n  return (\n    <>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\n        </Paper>\n      </main>\n    </>\n  );\n};\n\nexport default Checkout;","/home/brandon/e-commercee/src/components/CheckoutForm/Checkout/styles.js",[],[],"/home/brandon/e-commercee/src/components/CheckoutForm/AddressForm.jsx",["118","119","120"],[],"\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken, test }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n      <FormProvider method={method}>\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;","/home/brandon/e-commercee/src/components/CheckoutForm/PaymentForm.jsx",[],[],"/home/brandon/e-commercee/src/components/CheckoutForm/CustomTextField.jsx",[],[],"/home/brandon/e-commercee/src/components/CheckoutForm/Review.jsx",[],[],{"ruleId":"121","severity":1,"message":"122","line":5,"column":18,"nodeType":"123","messageId":"124","endLine":5,"endColumn":26},{"ruleId":"121","severity":1,"message":"125","line":5,"column":28,"nodeType":"123","messageId":"124","endLine":5,"endColumn":32},{"ruleId":"121","severity":1,"message":"126","line":5,"column":34,"nodeType":"123","messageId":"124","endLine":5,"endColumn":42},{"ruleId":"121","severity":1,"message":"127","line":10,"column":10,"nodeType":"123","messageId":"124","endLine":10,"endColumn":18},{"ruleId":"121","severity":1,"message":"128","line":12,"column":10,"nodeType":"123","messageId":"124","endLine":12,"endColumn":15},{"ruleId":"121","severity":1,"message":"129","line":13,"column":10,"nodeType":"123","messageId":"124","endLine":13,"endColumn":22},{"ruleId":"121","severity":1,"message":"130","line":25,"column":9,"nodeType":"123","messageId":"124","endLine":25,"endColumn":24},{"ruleId":"121","severity":1,"message":"131","line":31,"column":9,"nodeType":"123","messageId":"124","endLine":31,"endColumn":28},{"ruleId":"121","severity":1,"message":"132","line":37,"column":9,"nodeType":"123","messageId":"124","endLine":37,"endColumn":29},{"ruleId":"121","severity":1,"message":"133","line":43,"column":9,"nodeType":"123","messageId":"124","endLine":43,"endColumn":24},{"ruleId":"121","severity":1,"message":"134","line":55,"column":9,"nodeType":"123","messageId":"124","endLine":55,"endColumn":30},{"ruleId":"135","severity":1,"message":"136","line":36,"column":6,"nodeType":"137","endLine":36,"endColumn":12,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":43,"column":6,"nodeType":"137","endLine":43,"endColumn":8,"suggestions":"140"},{"ruleId":"135","severity":1,"message":"141","line":51,"column":6,"nodeType":"137","endLine":51,"endColumn":27,"suggestions":"142"},{"ruleId":"143","severity":2,"message":"144","line":56,"column":29,"nodeType":"123","messageId":"145","endLine":56,"endColumn":35},"no-unused-vars","'Products' is defined but never used.","Identifier","unusedVar","'Cart' is defined but never used.","'Checkout' is defined but never used.","'products' is assigned a value but never used.","'order' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'handleAddToCart' is assigned a value but never used.","'handleUpdateCartQty' is assigned a value but never used.","'handleRemoveFromCart' is assigned a value but never used.","'handleEmptyCart' is assigned a value but never used.","'handleCaptureCheckout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["148"],"no-undef","'method' is not defined.","undef",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"155","text":"156"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"157","text":"158"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"159","text":"160"},[1273,1279],"[activeStep, cart, history]",[1670,1672],"[checkoutToken.id]",[1915,1936],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]